components:
  schemas:
    TaskState:
      oneOf:
        - $ref: '#/components/schemas/TaskStateGitHubAccountPR'
        - $ref: '#/components/schemas/TaskStateReindexateAllPages'
      discriminator:
        propertyName: task_type
        mapping:
          github_account_pr: '#/components/schemas/TaskStateGitHubAccountPR'
          reindexate_all_pages: '#/components/schemas/TaskStateReindexateAllPages'

    TaskAction:
      oneOf:
        - $ref: '#/components/schemas/TaskActionIndexatePage'
        - $ref: '#/components/schemas/TaskActionAskLLM'
      discriminator:
        propertyName: task_action_type
        mapping:
          indexate_page: '#/components/schemas/TaskActionIndexatePage'
          ask_llm: '#/components/schemas/TaskActionAskLLM'

    TaskActionResult:
      oneOf:
        - $ref: '#/components/schemas/TaskActionResultIndexatePage'
        - $ref: '#/components/schemas/TaskActionResultAskLLM'
      discriminator:
        propertyName: task_action_type
        mapping:
          indexate_page: '#/components/schemas/TaskActionResultIndexatePage'
          ask_llm: '#/components/schemas/TaskActionResultAskLLM'

    TaskType:
      type: string
      enum:
        - github_account_pr
        - reindexate_all_pages

    TaskActionType:
      type: string
      enum:
        - indexate_page
        - ask_llm

    TaskActionStatus:
      type: string
      enum:
        - new
        - executing
        - finished
        - failed

    TaskStateGitHubAccountPR:
      type: object
      properties:
        task_type:
          $ref: '#/components/schemas/TaskType'
        pr_url:
          type: string
          format: uri
      required:
        - task_type
        - pr_url

    TaskStateReindexateAllPages:
      type: object
      properties:
        task_type:
          $ref: '#/components/schemas/TaskType'
        pages_to_indexate_ids:
          type: array
          items:
            $ref: '#/components/schemas/PageID'
        indexated_page_ids:
          type: array
          items:
            $ref: '#/components/schemas/PageID'
      required:
        - task_type
        - page_ids_to_indexate
        - indexated_page_ids

    TaskActionIndexatePage:
      type: object
      properties:
        task_action_type:
          $ref: '#/components/schemas/TaskActionType'
        page_id:
          type: string
          format: uuid
      required:
        - task_action_type
        - page_id

    TaskActionAskLLM:
      type: object
      properties:
        task_action_type:
          $ref: '#/components/schemas/TaskActionType'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/LLMMessage'
        model:
          $ref: '#/components/schemas/LLMModel'
      required:
        - task_action_type
        - messages
        - model

    TaskActionAdditionalInfo:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TaskActionStatus'
        task_id:
          $ref: '#/components/schemas/TaskID'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - status
        - task_id
        - created_at
        - updated_at

    TaskActionResultIndexatePage:
      type: object
      properties:
        task_action_type:
          $ref: '#/components/schemas/TaskActionType'
        page_id:
          type: string
          format: uuid
      required:
        - task_action_type
        - page_id

    TaskActionResultAskLLM:
      type: object
      properties:
        task_action_type:
          $ref: '#/components/schemas/TaskActionType'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/LLMMessage'
        server_response:
          $ref: '#/components/schemas/RawJSON'
      required:
        - task_action_type
        - messages
        - server_response

    TaskActionResultAdditionalInfo:
      type: object
      properties:
        task_id:
          $ref: '#/components/schemas/TaskID'
        created_at:
          type: string
          format: date-time
      required:
        - task_id
        - created_at

    LLMMessage:
      type: object
      properties:
        role:
          type: string
        content:
          type: string
      required:
        - role
        - content

    PageID:
      type: string
      format: uuid

    TaskID:
      type: integer
      format: int64

    RevisionID:
      type: integer
      format: int64

    TaskActionID:
      type: integer
      format: int64

    TaskActionResultID:
      type: integer
      format: int64

    LLMModel:
      type: string
      enum:
        - yandexgpt_5_lite

    PageAdditionalInfo:
      type: object
      properties:
        current_revision_id:
          $ref: '#/components/schemas/RevisionID'

    RawJSON:
      type: object
      additionalProperties: true
