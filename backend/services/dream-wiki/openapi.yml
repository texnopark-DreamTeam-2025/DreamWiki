openapi: 3.0.3
info:
  title: Dream Wiki API
  description: API Specification for Dream Wiki API
  version: 0.0.1

servers:
  - url: http://localhost:8080/api
    description: Development server

paths:
  /v1/login:
    post:
      summary: Аутентифицировать пользователя
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1LoginRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1LoginResponse"
        "401":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/search:
    post:
      summary: Поиск информации в базе знаний
      operationId: search
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1SearchRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1SearchResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/diagnostic-info/get:
    post:
      summary: Диагностическая информация и исходный код последней ревизии
      operationId: getDiagnosticInfo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1DiagnosticInfoGetRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1DiagnosticInfoGetResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/indexate-page:
    post:
      summary: Принудительно проиндексировать страницу. Синхронная ручка
      operationId: indexatePage
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1IndexatePageRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1IndexatePageResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/ywiki/add-page:
    post:
      summary: Добавление новой страницы из ywiki
      operationId: ywikiAddPage
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1YwikiAddPageRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1YwikiAddPageResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/github/account-pr:
    post:
      summary: Обновить информацию по PR из github
      operationId: githubAccountPR
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1GithubAccountPRRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1GithubAccountPRResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/ywiki/fetch-all:
    post:
      summary: Выгрузить все известные статьи с Яндекс Wiki и обновить индексацию
      operationId: ywikiFetchAll
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/integration-logs/get:
    post:
      summary: Получить логи указанной интеграции
      operationId: integrationLogsGet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1IntegrationLogsGetRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1IntegrationLogsGetResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/pages-tree/get:
    post:
      summary: Получить дерево диагностики
      operationId: pagesTreeGet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1PagesTreeGetRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1PagesTreeGetResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/tasks/list:
    post:
      summary: Получить список задач с фильтрами
      operationId: listTasks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1TasksListRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1TasksListResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/tasks/cancel:
    post:
      summary: Отменить задачу
      operationId: cancelTask
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1TasksCancelRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/tasks/retry:
    post:
      summary: Повторить задачу
      operationId: retryTask
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1TasksRetryRequest"
      responses:
        "200":
          $ref: "#/components/responses/EmptyOKResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/tasks/get:
    post:
      summary: Получить подробности одной задачи
      operationId: getTaskDetails
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1TasksGetRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1TasksGetResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/tasks/internal-state/get:
    post:
      summary: Получить состояние задачи
      operationId: getTaskInternalState
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1TasksInternalStateGetRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1TasksInternalStateGetResponse'
        "500":
          $ref: '#/components/responses/ErrorResponse'

  /v1/drafts/list:
    post:
      summary: Получить список черновиков
      operationId: listDrafts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1DraftsListRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1DraftsListResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/drafts/get:
    post:
      summary: Получить черновик
      operationId: getDraft
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1DraftsGetRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1DraftsGetResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/drafts/create:
    post:
      summary: Создать черновик на основе существующей страницы в Wiki
      operationId: createDraft
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1DraftsCreateRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1DraftsCreateResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/drafts/delete:
    post:
      summary: Удалить черновик
      operationId: deleteDraft
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1DraftsDeleteRequest"
      responses:
        "200":
          $ref: "#/components/responses/EmptyOKResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/drafts/update:
    post:
      summary: Обновить черновик
      operationId: updateDraft
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1DraftsUpdateRequest"
      responses:
        "200":
          $ref: "#/components/responses/EmptyOKResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/drafts/apply:
    post:
      summary: Применить черновик к странице
      operationId: applyDraft
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1DraftsApplyRequest"
      responses:
        "200":
          $ref: "#/components/responses/EmptyOKResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

components:
  schemas:
    V1LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    V1LoginResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token

    V1SearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Поисковый запрос на естественном языке
      required:
        - query

    V1SearchResponse:
      type: object
      properties:
        result_items:
          type: array
          items:
            $ref: "#/components/schemas/SearchResultItem"
      required:
        - result_items

    V1DiagnosticInfoGetRequest:
      type: object
      properties:
        page_id:
          type: string
          format: uuid
      required:
        - page_id

    V1DiagnosticInfoGetResponse:
      type: object
      properties:
        page:
          $ref: "#/components/schemas/Page"
      required:
        - page

    V1IndexatePageRequest:
      type: object
      properties:
        page_id:
          type: string
          format: uuid
      required:
        - page_id

    V1IndexatePageResponse:
      type: object
      properties:
        page_id:
          type: string
          format: uuid
      required:
        - page_id

    V1YwikiAddPageRequest:
      type: object
      properties:
        page_url:
          type: string
          format: uri
      required:
        - page_url

    V1YwikiAddPageResponse:
      type: object

    V1GithubAccountPRRequest:
      type: object
      properties:
        pr_url:
          type: string
          format: uri
      required:
        - pr_url

    V1GithubAccountPRResponse:
      type: object

    V1IntegrationLogsGetRequest:
      type: object
      properties:
        integration_id:
          $ref: "#/components/schemas/IntegrationID"
        cursor:
          type: string
      required:
        - integration_id

    V1IntegrationLogsGetResponse:
      type: object
      properties:
        cursor:
          type: string
        log_fields:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationLogField'
      required:
        - cursor
        - log_fields

    V1PagesTreeGetRequest:
      type: object
      properties:
        active_page_ids:
          type: array
          description: Массив включает ID текущей страницы и ID страниц, которые открыты через "треугольничек"
          items:
            $ref: '#/components/schemas/PageID'
      required:
        - active_page_ids

    V1PagesTreeGetResponse:
      type: object
      properties:
        tree:
          type: array
          items:
            $ref: '#/components/schemas/TreeItem'
      required:
        - tree

    V1TasksListRequest:
      type: object
      properties:
        only_my_tasks:
          type: boolean
          default: false
        only_active:
          type: boolean
          default: false
        cursor:
          type: string

    V1TasksCancelRequest:
      type: object
      properties:
        task_id:
          $ref: '#/components/schemas/TaskID'
      required:
        - task_id

    V1TasksRetryRequest:
      type: object
      properties:
        task_id:
          $ref: '#/components/schemas/TaskID'
      required:
        - task_id

    V1TasksGetRequest:
      type: object
      properties:
        task_id:
          $ref: '#/components/schemas/TaskID'
      required:
        - task_id

    V1TasksGetResponse:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/Task"
      required:
        - task

    V1TasksInternalStateGetRequest:
      type: object
      properties:
        task_id:
          $ref: '#/components/schemas/TaskID'
      required:
        - task_id

    V1TasksInternalStateGetResponse:
      type: object
      properties:
        task_state:
          $ref: '#/components/schemas/RawJSON'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/RawJSON'
      required:
        - task_id

    V1TasksListResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/TaskDigest"
        cursor:
          type: string
      required:
        - tasks
        - cursor

    V1DraftsListRequest:
      type: object
      properties:
        cursor:
          type: string

    V1DraftsListResponse:
      type: object
      properties:
        drafts:
          type: array
          items:
            $ref: '#/components/schemas/DraftDigest'
        cursor:
          type: string
      required:
        - drafts
        - cursor

    V1DraftsGetRequest:
      type: object
      properties:
        draft_id:
          $ref: '#/components/schemas/DraftID'
      required:
        - draft_id

    V1DraftsGetResponse:
      type: object
      properties:
        draft:
          $ref: '#/components/schemas/Draft'
      required:
        - draft

    V1DraftsCreateRequest:
      type: object
      properties:
        page_url:
          type: string
          format: uri
      required:
        - page_url

    V1DraftsCreateResponse:
      type: object
      properties:
        draft_id:
          $ref: '#/components/schemas/DraftID'
      required:
        - draft_id

    V1DraftsDeleteRequest:
      type: object
      properties:
        draft_id:
          $ref: '#/components/schemas/DraftID'
      required:
        - draft_id

    V1DraftsUpdateRequest:
      type: object
      properties:
        draft_id:
          $ref: '#/components/schemas/DraftID'
        new_content:
          type: string
        new_title:
          type: string
      required:
        - draft_id

    V1DraftsApplyRequest:
      type: object
      properties:
        draft_id:
          $ref: '#/components/schemas/DraftID'
      required:
        - draft_id

    SearchResultItem:
      type: object
      properties:
        page_id:
          $ref: '#/components/schemas/PageID'
        title:
          type: string
        description:
          type: string
          description: Описание поискового результата в формате MD
      required:
        - title
        - description
        - page_id

    Page:
      type: object
      properties:
        page_id:
          $ref: '#/components/schemas/PageID'
        content:
          type: string
        ywiki_slug:
          type: string
        title:
          type: string
      required:
        - page_id
        - content
        - title

    PageDigest:
      type: object
      properties:
        page_id:
          $ref: '#/components/schemas/PageID'
        title:
          type: string
      required:
        - page_id
        - title

    TreeItem:
      type: object
      properties:
        page_digest:
          $ref: '#/components/schemas/PageDigest'
        expanded:
          type: boolean
        children:
          type: array
          description: Если нет дочерних страниц, это поле равно undefined
          items:
            $ref: '#/components/schemas/TreeItem'
      required:
        - page_digest
        - expanded

    ErrorResponseBody:
      type: object
      properties:
        message:
          type: string
      required:
        - message

    IntegrationID:
      type: string
      enum:
        - ywiki
        - github

    IntegrationLogField:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        content:
          type: string
      required:
        - created_at
        - content

    PageID:
      type: string
      format: uuid

    TaskID:
      type: integer
      format: int64

    DraftID:
      type: string
      format: uuid

    TaskStatus:
      type: string
      enum:
        - waiting
        - executing
        - done
        - failed_by_error
        - failed_by_timeout
        - cancelled

    DraftStatus:
      type: string
      enum:
        - active
        - merged
        - needs_rebase

    Subtask:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/TaskStatus'
        description:
          type: string
      required:
        - id
        - status
        - description

    TaskDigest:
      type: object
      properties:
        task_id:
          $ref: '#/components/schemas/TaskID'
        status:
          $ref: '#/components/schemas/TaskStatus'
        triggered_by:
          type: string
        description:
          type: string
      required:
        - task_id
        - status
        - triggered_by
        - description

    Task:
      type: object
      properties:
        task_digest:
          $ref: '#/components/schemas/TaskDigest'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/Subtask'
      required:
        - task_digest
        - triggered_by
        - description
        - created_at
        - updated_at
        - subtasks

    DraftDigest:
      type: object
      properties:
        draft_id:
          type: string
          format: uuid
        draft_title:
          type: string
        status:
          $ref: '#/components/schemas/DraftStatus'
        page_digest:
          $ref: '#/components/schemas/PageDigest'
      required:
        - draft_id
        - draft_title
        - status
        - page_digest

    Draft:
      type: object
      properties:
        draft_digest:
          $ref: '#/components/schemas/DraftDigest'
        content:
          type: string
        original_page_content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - draft_digest
        - content
        - created_at
        - updated_at

    RawJSON:
      type: object
      additionalProperties: true

  responses:
    ErrorResponse:
      description: 4xx or 5xx code
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponseBody"

    EmptyOKResponse:
      description: Operation successful, but no content returned
      content:
        application/json:
          schema:
            type: object

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
